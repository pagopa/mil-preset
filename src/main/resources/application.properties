# ------------------------------------------------------------------------------
# General logging configuration
# ------------------------------------------------------------------------------
quarkus.banner.enabled=false
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{requestId}] [%p] [%c{2}] %m%n
quarkus.log.console.json=false

%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."it.pagopa.swclient.mil.preset".level=DEBUG

%test.quarkus.log.level=ERROR
%test.quarkus.log.category."it.pagopa.swclient.mil.preset".level=DEBUG

%prod.quarkus.log.console.json=true
%prod.quarkus.log.level=${preset.quarkus-log-level}
%prod.quarkus.log.category."it.pagopa.swclient.mil.preset".level=${preset.app-log-level}

#quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE
#quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=TRACE

# ------------------------------------------------------------------------------
# DB configuration
# ------------------------------------------------------------------------------
%dev.quarkus.mongodb.connect-timeout=5
%dev.quarkus.mongodb.read-timeout=10
%dev.quarkus.mongodb.server-selection-timeout=5
%dev.quarkus.mongodb.connection-string = mongodb://localhost:27017

%test.quarkus.mongodb.connect-timeout=5
%test.quarkus.mongodb.read-timeout=10
%test.quarkus.mongodb.server-selection-timeout=5
%test.quarkus.mongodb.connection-string = mongodb://localhost:27017

%prod.quarkus.mongodb.connect-timeout=${mongo-connect-timeout}
%prod.quarkus.mongodb.read-timeout=${mongo-read-timeout}
%prod.quarkus.mongodb.server-selection-timeout=${mongo-server-selection-timeout}
%prod.quarkus.mongodb.connection-string=${mongo-connection-string-1},${mongo-connection-string-2}

# ------------------------------------------------------------------------------
# Kafka / Azure Event Bus configuration (see https://quarkus.io/guides/kafka#azure-event-hub)
#
# kafka.bootstrap.servers=<MY-EVENT-HUB>.servicebus.windows.net:9093
# kafka.security.protocol=SASL_SSL
# kafka.sasl.mechanism=PLAIN
# kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="<YOUR-EVENTHUBS-CONNECTION-STRING>";
# ------------------------------------------------------------------------------
quarkus.kafka.devservices.enabled=false

mp.messaging.incoming.presets.connector=smallrye-kafka
mp.messaging.incoming.presets.group.id=preset-processor

%dev.mp.messaging.incoming.presets.topic=mil-d-presets-evh
%test.mp.messaging.incoming.presets.topic=presets
%prod.mp.messaging.incoming.presets.topic=${kafka-topic}

%dev.kafka.bootstrap.servers=mil-d-evhns.servicebus.windows.net:9093
%dev.kafka.security.protocol=SASL_SSL
%dev.kafka.sasl.mechanism=PLAIN
%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="" password="";

%test.kafka.bootstrap.servers=localhost:2024

%prod.kafka.bootstrap.servers=${kafka-bootstrap-server}
%prod.kafka.security.protocol=SASL_SSL
%prod.kafka.sasl.mechanism=PLAIN
%prod.kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${kafka-connection-string-1}";

# ------------------------------------------------------------------------------
# JWT RBAC configurations
# ------------------------------------------------------------------------------
%dev.mp.jwt.verify.publickey.location=https://mil-d-apim.azure-api.net/mil-auth/.well-known/jwks.json
%test.mp.jwt.verify.publickey.location=https://mil-d-apim.azure-api.net/mil-auth/.well-known/jwks.json
%prod.mp.jwt.verify.publickey.location=${jwt-publickey-location}

# ------------------------------------------------------------------------------
# Service configurations
# ------------------------------------------------------------------------------
%dev.preset.location.base-url=https://mil-d-apim.azure-api.net/mil-preset
%test.preset.location.base-url=https://mil-d-apim.azure-api.net/mil-preset
%prod.preset.location.base-url=${preset.location.base-url}

# ------------------------------------------------------------------------------
# OpenTelemetry
# ------------------------------------------------------------------------------
quarkus.opentelemetry.tracer.exporter.azure.enabled=false
quarkus.otel.azure.applicationinsights.connection.string=InstrumentationKey=dummy;IngestionEndpoint=https://dummy/;LiveEndpoint=https://dummy/;ApplicationId=dummy

%prod.quarkus.opentelemetry.tracer.exporter.azure.enabled=true
%prod.quarkus.otel.azure.applicationinsights.connection.string=${application-insights.connection-string}