{
	"info": {
		"_postman_id": "03de85da-f3a2-4a0d-943c-f9a49cda333b",
		"name": "7.Mil-Preset",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Preset Flow",
			"item": [
				{
					"name": "GetAccessToken",
					"item": [
						{
							"name": "GetSlavePosAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        console.log(\"JKW \" + jsonData);\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_slave_pos\", \"Bearer \" + jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{access_token_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{access_token_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "5254f087-1214-45cd-94ae-fda53c835197",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetInstitutionPortalAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_institution\", \"Bearer \" + jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "default"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attivazione Terminale",
					"item": [
						{
							"name": "Subscribe",
							"item": [
								{
									"name": "Subscriber inserito",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let sub_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"subscriber_id\", sub_id);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paTaxCode\" : \"{{pa_tax_code}}\",\r\n  \"label\": \"{{label}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subscriber esistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let sub_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"subscriber_id\", sub_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paTaxCode\" : {{pa_tax_code}},\r\n  \"label\": \"test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Elenco Terminali",
					"item": [
						{
							"name": "GetSubscribers",
							"item": [
								{
									"name": "No Subscriber found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.expect(jsonData.subscribers).not.null;\r",
													"    pm.expect(jsonData.subscribers.length ==0);\r",
													"    \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_institution}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals/00000000000",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals",
												"00000000000"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subscriber found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Body is correct\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"subscribers\");\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.subscribers[0].acquirerId).to.eql(pm.variables.get(\"acquirer_id\"));\r",
													"     pm.expect(jsonData.subscribers[0].channel).to.eql(pm.variables.get(\"channel\"));\r",
													"    pm.expect(jsonData.subscribers[0].merchantId).to.eql(pm.variables.get(\"merchant_id\"));\r",
													"    pm.expect(jsonData.subscribers[0].terminalId).to.eql(pm.variables.get(\"terminal_id\"));\r",
													"    pm.expect(jsonData.subscribers[0].paTaxCode).to.eql(pm.variables.get(\"pa_tax_code\"));\r",
													"    pm.expect(jsonData.subscribers[0].subscriberId).to.eql(pm.environment.get(\"subscriber_id\"));\r",
													"    pm.expect(jsonData.subscribers[0].label).to.eql(pm.variables.get(\"label\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_institution}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals",
												"{{pa_tax_code}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Creazione Preset",
					"item": [
						{
							"name": "Preset",
							"item": [
								{
									"name": "Preset-subscriber non trovato",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00A00000F\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": " {{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_institution}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"000000\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/presets",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"presets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Preset-subscriber trovato",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let preset_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"preset_id\", preset_id);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": " {{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_institution}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/presets",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"presets"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Elenco delle Preset",
					"item": [
						{
							"name": "Elenco",
							"item": [
								{
									"name": "Elenco preset",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Body is correct\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"presets\");\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.presets[0].operationType).to.eql(\"PAYMENT_NOTICE\");\r",
													"     pm.expect(jsonData.presets[0].presetId).to.eql(pm.environment.get(\"preset_id\"));\r",
													"    pm.expect(jsonData.presets[0].paTaxCode).to.eql(pm.variables.get(\"pa_tax_code\"));\r",
													"    pm.expect(jsonData.presets[0].subscriberId).to.eql(pm.variables.get(\"subscriber_id\"));\r",
													"    pm.expect(jsonData.presets[0].paTaxCode).to.eql(pm.variables.get(\"pa_tax_code\"));\r",
													"    pm.expect(jsonData.presets[0].noticeTaxCode).to.eql(pm.variables.get(\"notice_pa_tax_code\"));\r",
													"    pm.expect(jsonData.presets[0].noticeNumber).to.eql(pm.variables.get(\"notice_number\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_institution}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"presets",
												"{{pa_tax_code}}",
												"{{subscriber_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Recupero Preset da eseguire",
					"item": [
						{
							"name": "Preset da eseguire",
							"item": [
								{
									"name": "Recupero preset da eseguire",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Body is correct\", function () {\r",
													"\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.operationType).to.eql(\"PAYMENT_NOTICE\");\r",
													"     pm.expect(jsonData.presetId).to.eql(pm.environment.get(\"preset_id\"));\r",
													"    pm.expect(jsonData.paTaxCode).to.eql(pm.variables.get(\"pa_tax_code\"));\r",
													"    pm.expect(jsonData.subscriberId).to.eql(pm.variables.get(\"subscriber_id\"));\r",
													"    pm.expect(jsonData.status).to.eql(\"TO_EXECUTE\");\r",
													"    pm.expect(jsonData.noticeTaxCode).to.eql(pm.variables.get(\"notice_pa_tax_code\"));\r",
													"    pm.expect(jsonData.noticeNumber).to.eql(pm.variables.get(\"notice_number\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"presets",
												"{{pa_tax_code}}",
												"{{subscriber_id}}",
												"last_to_execute"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Validazione headers",
			"item": [
				{
					"name": "GetAccessToken",
					"item": [
						{
							"name": "GetSlavePosAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_slave_pos\", \"Bearer \" + jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{access_token_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{access_token_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "5254f087-1214-45cd-94ae-fda53c835197",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetInstitutionPortalAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_institution\", \"Bearer \" + jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "default"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attivazione Terminale",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "AcquirerId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "AcquirerId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "ssk23",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Channel nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Channel non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "AATTMM",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "MerchantId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "POS",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "MerchantId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "POS",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "234-234-234",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminalId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminalId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_fee_calculator_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "13---..99",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": {{pa_tax_code}},\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Elenco Terminali",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Creazione Preset",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Elenco delle Preset",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Recupero Preset da eseguire",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "AcquirerId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "AcquirerId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "ssk23",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Channel nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Channel non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "AATTMM",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "MerchantId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "POS",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "MerchantId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "POS",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "234-234-234",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminalId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminalId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "13---..99",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cancellazione terminale",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Disattivazione del terminale",
					"item": [
						{
							"name": "RequestId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "RequestId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "131///00=",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "pppL",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Version size non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "AcquirerId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "AcquirerId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "ssk23",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Channel nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Channel non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "AATTMM",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MerchantId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "POS",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MerchantId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "POS",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "234-234-234",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminalId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TerminalId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "13---..99",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Validazione Dati",
			"item": [
				{
					"name": "GetAccessToken",
					"item": [
						{
							"name": "GetSlavePosAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_slave_pos\", \"Bearer \" + jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{access_token_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{access_token_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "5254f087-1214-45cd-94ae-fda53c835197",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetInstitutionPortalAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_institution\", \"Bearer \" + jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "default"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attivazione Terminale",
					"item": [
						{
							"name": "PaTaxCode nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors paTaxCode null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "PaTaxCode non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors paTaCode null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\": \"{{\",\r\n  \"label\": \"Reception POS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Label nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors label null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\" : {{pa_tax_code}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Label non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors label null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000005\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paTaxCode\" : {{pa_tax_code}},\r\n  \"label\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Elenco Terminali",
					"item": [
						{
							"name": "PaTaxCode non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "RequestId",
										"value": " {{request_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/0000",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"0000"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Creazione Preset",
					"item": [
						{
							"name": "OperationType nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000009\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "OperationType npn valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A00000A\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\" : \"PAY_TEST\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "PaTaxCode nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000002\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "PaTaxCode non valodo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000003\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"1537637100989778657\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "SubscriberId nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000007\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"15376371009\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "SubscriberId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000008\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"x46tr30kkjlakmsfla\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "NoticeTaxCode nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A00000B\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "NoticeTaxCode non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A00000C\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"15376371009wsdfsknnmqpsdqo\",\r\n  \"noticeNumber\": \"{{notice_number}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "NoticeNumber nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A00000D\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						},
						{
							"name": "NoticeNumber non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A00000E\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": " {{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"operationType\": \"PAYMENT_NOTICE\",\r\n  \"paTaxCode\": \"{{pa_tax_code}}\",\r\n  \"subscriberId\": \"{{subscriber_id}}\",\r\n  \"noticeTaxCode\": \"{{notice_pa_tax_code}}\",\r\n  \"noticeNumber\": \"485564829563528563ads,vlmsvdmml\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Elenco delle Preset",
					"item": [
						{
							"name": "PaTaxCode non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/@dq/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"@dq",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SubscriberId non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000008\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_institution}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/@das",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"@das"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Recupero Preset da eseguire",
					"item": [
						{
							"name": "Recupero preset da eseguire",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.operationType).to.eql(\"PAYMENT_NOTICE\");\r",
											"     pm.expect(jsonData.presetId).to.eql(pm.environment.get(\"preset_id\"));\r",
											"    pm.expect(jsonData.paTaxCode).to.eql(pm.variables.get(\"pa_tax_code\"));\r",
											"    pm.expect(jsonData.subscriberId).to.eql(pm.variables.get(\"subscriber_id\"));\r",
											"    pm.expect(jsonData.status).to.eql(\"TO_EXECUTE\");\r",
											"    pm.expect(jsonData.noticeTaxCode).to.eql(pm.variables.get(\"notice_pa_tax_code\"));\r",
											"    pm.expect(jsonData.noticeNumber).to.eql(pm.variables.get(\"notice_number\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/presets/{{pa_tax_code}}/{{subscriber_id}}/last_to_execute",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"presets",
										"{{pa_tax_code}}",
										"{{subscriber_id}}",
										"last_to_execute"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cancellazione terminale",
					"item": [
						{
							"name": "PaTaxCode non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"errors paTaCode null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00A000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/@/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"@",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Disattivazione del terminale",
					"item": [
						{
							"name": "Disattivazione terminale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cancellazione terminale",
			"item": [
				{
					"name": "GetAccessToken",
					"item": [
						{
							"name": "GetSlavePosAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_slave_pos\", \"Bearer \" + jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{access_token_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{access_token_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "5254f087-1214-45cd-94ae-fda53c835197",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetInstitutionPortalAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_institution\", \"Bearer \" + jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "default"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attivazione Terminale",
					"item": [
						{
							"name": "Subscribe",
							"item": [
								{
									"name": "Subscriber inserito",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let sub_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"subscriber_id\", sub_id);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paTaxCode\" : \"{{pa_tax_code}}\",\r\n  \"label\": \"{{label}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subscriber esistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let sub_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"subscriber_id\", sub_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paTaxCode\" : {{pa_tax_code}},\r\n  \"label\": \"test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Canecellazione",
					"item": [
						{
							"name": "cancellazione terminale non trovato",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/000000",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "cancellazione terminale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Disattivazione del terminale",
			"item": [
				{
					"name": "GetAccessToken",
					"item": [
						{
							"name": "GetSlavePosAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_slave_pos\", \"Bearer \" + jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "default"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{access_token_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{access_token_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "5254f087-1214-45cd-94ae-fda53c835197",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetInstitutionPortalAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_institution\", \"Bearer \" + jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "default"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{access_token_base_url}}/token",
									"host": [
										"{{access_token_base_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attivazione Terminale",
					"item": [
						{
							"name": "Subscribe",
							"item": [
								{
									"name": "Subscriber inserito",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let sub_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"subscriber_id\", sub_id);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paTaxCode\" : \"{{pa_tax_code}}\",\r\n  \"label\": \"{{label}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subscriber esistente",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													"pm.test(\"Location is present\", function () {\r",
													"    pm.response.to.have.header(\"Location\");\r",
													"    let location = pm.response.headers.get(\"Location\")\r",
													"    let pos = location.lastIndexOf(\"/\");\r",
													"    let sub_id = location.substr(pos + 1, location.length);\r",
													"    pm.environment.set(\"subscriber_id\", sub_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_preset_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{access_token_slave_pos}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paTaxCode\" : {{pa_tax_code}},\r\n  \"label\": \"test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PRESET_BASE_URL}}/terminals",
											"host": [
												"{{MIL_PRESET_BASE_URL}}"
											],
											"path": [
												"terminals"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Desattivazione",
					"item": [
						{
							"name": "Disattivazione terminale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_preset_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{access_token_slave_pos}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PRESET_BASE_URL}}/terminals/{{pa_tax_code}}/{{subscriber_id}}",
									"host": [
										"{{MIL_PRESET_BASE_URL}}"
									],
									"path": [
										"terminals",
										"{{pa_tax_code}}",
										"{{subscriber_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mil_preset_version",
			"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay",
			"type": "default"
		},
		{
			"key": "terminal_id",
			"value": "0aB9wXyZ",
			"type": "default"
		},
		{
			"key": "channel",
			"value": "POS",
			"type": "default"
		},
		{
			"key": "merchant_id",
			"value": "12346789",
			"type": "default"
		},
		{
			"key": "pa_tax_code",
			"value": "15376371009",
			"type": "default"
		},
		{
			"key": "notice_pa_tax_code",
			"value": "15376371009",
			"type": "default"
		},
		{
			"key": "notice_number",
			"value": "485564829563528563",
			"type": "default"
		},
		{
			"key": "label",
			"value": "test preset",
			"type": "default"
		}
	]
}